<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://afirthes.github.io/</id><title>Sergio's blog</title><subtitle>A simple place for tutorials, articles and other stuff about iOS dev</subtitle> <updated>2022-09-15T00:20:06+03:00</updated> <author> <name>Sergey Chukanov</name> <uri>https://afirthes.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://afirthes.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="ru" href="https://afirthes.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 Sergey Chukanov </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Как актуализировать изменения в общих модулях без pull request.</title><link href="https://afirthes.github.io/posts/common-branch-exchange/" rel="alternate" type="text/html" title="Как актуализировать изменения в общих модулях без pull request." /><published>2022-09-14T17:35:00+03:00</published> <updated>2022-09-15T00:15:34+03:00</updated> <id>https://afirthes.github.io/posts/common-branch-exchange/</id> <content src="https://afirthes.github.io/posts/common-branch-exchange/" /> <author> <name>afirthes</name> </author> <category term="Git" /> <summary> Проблема разработки с общим CommonUI Освежим общий процесс разработки. Создаем задачу в Projects на GitHub Зная номер задачи создаем ветку feature/X, где X - номер задачи Разрабатываем, делая N комитов Когда задача завершена - делаем pull request Жмем кнопку и сливаем эти изменения в master. Данная схема имеет смысл только когда напрямую в master комитить нельзя. Так у нас и наст... </summary> </entry> <entry><title>Зачем нужны сервисы и как их готовить</title><link href="https://afirthes.github.io/posts/understand-services-concept/" rel="alternate" type="text/html" title="Зачем нужны сервисы и как их готовить" /><published>2022-09-10T15:45:00+03:00</published> <updated>2022-09-10T22:52:52+03:00</updated> <id>https://afirthes.github.io/posts/understand-services-concept/</id> <content src="https://afirthes.github.io/posts/understand-services-concept/" /> <author> <name>afirthes</name> </author> <category term="Architecture" /> <category term="Getting Started" /> <summary> Без сервисов Принципы SOLID — это руководства, которые также могут применяться во время работы над существующим программным обеспечением для его улучшения, например, для удаления «дурно пахнущего кода». В какой-то момент при написании проекта в коде начинает появляться повторяющийся код. class ClassA { func foo1() { // загрузка данных из бд // изменение объекта в соотвествии с ... </summary> </entry> </feed>
